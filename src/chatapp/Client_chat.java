/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatapp;

import static chatapp.Server_chat.clientSocket;
import java.io.*;
import java.net.*;


/**
 *
 * @author habiba
 */
public class Client_chat extends javax.swing.JFrame {

    /**
     * Creates new form Client_chat
     */
    static Socket clientSocket;//s
    static DataInputStream din;
    static DataOutputStream dout;
    static BufferedReader br;//in
   static String msgOutput = "";
   public Client_chat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //static ServerSocket ss;
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_send = new javax.swing.JButton();
        ClientChat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msg_area.setColumns(20);
        msg_area.setForeground(new java.awt.Color(9, 9, 9));
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });

        msg_send.setText("Send");
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });

        ClientChat.setForeground(new java.awt.Color(9, 9, 9));
        ClientChat.setText("   Client Messenger");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(292, Short.MAX_VALUE)
                .addComponent(msg_send)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientChat, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClientChat, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_sendActionPerformed
        // TODO add your handling code here:
        try{
           // String msgOutput = "";
            msgOutput = msg_text.getText().trim();
            dout.writeUTF(msgOutput);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_msg_sendActionPerformed

    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msg_textActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client_chat().setVisible(true);
            }
        });
        /*try{
            s=new Socket("127.0.0.1",8732); //here we write ip and port number of server.
        din = new DataInputStream(s.getInputStream());
        dout = new DataOutputStream(s.getOutputStream());
        String msgInput = "";
       while(!msgInput.equals("exit"))
       {
           msgInput= din.readUTF();
           msg_area.setText(msg_area.getText().trim()+"\n Server:\t"+msgInput);
       }
        }catch(Exception e){
            
        }*/
        /*2String hostName = "localhost";
        int portNumber = 5432;
        try{
            s = new Socket(hostName,portNumber); 
            System.out.println("Client 1 : Connected to "+s);
            PrintWriter out =new PrintWriter(s.getOutputStream(),true);
            System.out.println("Client 1 : what do u want to send ");
            in = new BufferedReader (new InputStreamReader (s.getInputStream())) ;//sever input
            BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in));//client input.
            String msgInput;
            while((msgInput=stdIn.readLine())!= null){
                out.println(msgInput);//send message to sever.
            System.out.println("Client 1 : what do u want to send ");
            System.out.println("client 2:"+in.readLine());
            }
            
            
        }catch(UnknownHostException e){
            System.err.println("Don't knw abut host "+hostName);
            System.exit(1);
        }
        catch(IOException e){
            System.err.println("Could'nt get I/O for connection to "+hostName);
           
        }2*/
        try{
            clientSocket=new Socket("127.0.0.1",5432); //server ip and port number
        din = new DataInputStream(clientSocket.getInputStream());
        dout = new DataOutputStream(clientSocket.getOutputStream());
       // br = new BufferedReader(new InputStreamReader(System.in));
        
        String msgInput = "";
       while(!msgInput.equals("exit"))
       {  // msgOutput = br.readLine();
          // dout.writeUTF(msgOutput);
          // msgInput = din.readUTF();
          // System.out.println(msgInput);//printing server msg.
           
           
           msgInput= din.readUTF();
           msg_area.setText(msg_area.getText()+"\n Server:\t"+msgInput);
       }
        }catch(Exception e){
         //handle exception here   
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ClientChat;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JButton msg_send;
    private javax.swing.JTextField msg_text;
    // End of variables declaration//GEN-END:variables
}
